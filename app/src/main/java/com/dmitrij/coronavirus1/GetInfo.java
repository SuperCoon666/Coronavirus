package com.dmitrij.coronavirus1;

import android.content.Context;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.loader.content.AsyncTaskLoader;

import java.io.IOException;
import java.io.InputStream;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.Scanner;

public class GetInfo extends AsyncTaskLoader<String>
{

    private String json = "";
    private String TAG = "gsonon";
    public GetInfo(@NonNull Context context) {
        super(context);
    }


    public GetInfo(@NonNull Context context, Bundle bundle)
    {
        super(context);
        //Intent intent = new Intent();
        //intent.putExtra("my intent", bundle);
        //select_country = bundle.getString("country");
        // todo implement bundle select country
    }

    @Override
    public void forceLoad()
    {
        Log.d(TAG, "forceLoad");
        super.forceLoad();
    }

    @Override
    protected void onStartLoading()
    {
        super.onStartLoading();
        Log.d(TAG, "onStartLoading");
        forceLoad();
    }

    @Override
    protected void onStopLoading()
    {
        super.onStopLoading();
        Log.d(TAG, "onStopLoading");
    }

    @Override
    public void deliverResult(String data)
    {
        Log.d(TAG, "deliverResult");
        super.deliverResult(data);
    }

    @Nullable
    @Override
    public String loadInBackground()
    {
        String loc = "";
        try
        {
            URL url = new URL("https://coronavirus-tracker-api.herokuapp.com/v2/locations/82"); //187
            InputStream in = (InputStream) url.getContent();
            Scanner scanner = new Scanner(in);
            loc = scanner.nextLine();

        }
        catch (MalformedURLException e)
        {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }

        Log.d("gsonon", loc);

        String sample = "{\"location\":{\"id\":187,\"country\":\"Russia\",\"country_code\":\"RU\",\"country_population\":140702000,\"province\":\"\",\"county\":\"\",\"last_updated\":\"2020-04-04T12:36:18.981302Z\",\"coordinates\":{\"latitude\":\"60.0\",\"longitude\":\"90.0\"},\"latest\":{\"confirmed\":4149,\"deaths\":34,\"recovered\":0},\"timelines\":{\"confirmed\":{\"latest\":4149,\"timeline\":{\"2020-01-22T00:00:00Z\":0,\"2020-01-23T00:00:00Z\":0,\"2020-01-24T00:00:00Z\":0,\"2020-01-25T00:00:00Z\":0,\"2020-01-26T00:00:00Z\":0,\"2020-01-27T00:00:00Z\":0,\"2020-01-28T00:00:00Z\":0,\"2020-01-29T00:00:00Z\":0,\"2020-01-30T00:00:00Z\":0,\"2020-01-31T00:00:00Z\":2,\"2020-02-01T00:00:00Z\":2,\"2020-02-02T00:00:00Z\":2,\"2020-02-03T00:00:00Z\":2,\"2020-02-04T00:00:00Z\":2,\"2020-02-05T00:00:00Z\":2,\"2020-02-06T00:00:00Z\":2,\"2020-02-07T00:00:00Z\":2,\"2020-02-08T00:00:00Z\":2,\"2020-02-09T00:00:00Z\":2,\"2020-02-10T00:00:00Z\":2,\"2020-02-11T00:00:00Z\":2,\"2020-02-12T00:00:00Z\":2,\"2020-02-13T00:00:00Z\":2,\"2020-02-14T00:00:00Z\":2,\"2020-02-15T00:00:00Z\":2,\"2020-02-16T00:00:00Z\":2,\"2020-02-17T00:00:00Z\":2,\"2020-02-18T00:00:00Z\":2,\"2020-02-19T00:00:00Z\":2,\"2020-02-20T00:00:00Z\":2,\"2020-02-21T00:00:00Z\":2,\"2020-02-22T00:00:00Z\":2,\"2020-02-23T00:00:00Z\":2,\"2020-02-24T00:00:00Z\":2,\"2020-02-25T00:00:00Z\":2,\"2020-02-26T00:00:00Z\":2,\"2020-02-27T00:00:00Z\":2,\"2020-02-28T00:00:00Z\":2,\"2020-02-29T00:00:00Z\":2,\"2020-03-01T00:00:00Z\":2,\"2020-03-02T00:00:00Z\":3,\"2020-03-03T00:00:00Z\":3,\"2020-03-04T00:00:00Z\":3,\"2020-03-05T00:00:00Z\":4,\"2020-03-06T00:00:00Z\":13,\"2020-03-07T00:00:00Z\":13,\"2020-03-08T00:00:00Z\":17,\"2020-03-09T00:00:00Z\":17,\"2020-03-10T00:00:00Z\":20,\"2020-03-11T00:00:00Z\":20,\"2020-03-12T00:00:00Z\":28,\"2020-03-13T00:00:00Z\":45,\"2020-03-14T00:00:00Z\":59,\"2020-03-15T00:00:00Z\":63,\"2020-03-16T00:00:00Z\":90,\"2020-03-17T00:00:00Z\":114,\"2020-03-18T00:00:00Z\":147,\"2020-03-19T00:00:00Z\":199,\"2020-03-20T00:00:00Z\":253,\"2020-03-21T00:00:00Z\":306,\"2020-03-22T00:00:00Z\":367,\"2020-03-23T00:00:00Z\":438,\"2020-03-24T00:00:00Z\":495,\"2020-03-25T00:00:00Z\":658,\"2020-03-26T00:00:00Z\":840,\"2020-03-27T00:00:00Z\":1036,\"2020-03-28T00:00:00Z\":1264,\"2020-03-29T00:00:00Z\":1534,\"2020-03-30T00:00:00Z\":1836,\"2020-03-31T00:00:00Z\":2337,\"2020-04-01T00:00:00Z\":2777,\"2020-04-02T00:00:00Z\":3548,\"2020-04-03T00:00:00Z\":4149}},\"deaths\":{\"latest\":34,\"timeline\":{\"2020-01-22T00:00:00Z\":0,\"2020-01-23T00:00:00Z\":0,\"2020-01-24T00:00:00Z\":0,\"2020-01-25T00:00:00Z\":0,\"2020-01-26T00:00:00Z\":0,\"2020-01-27T00:00:00Z\":0,\"2020-01-28T00:00:00Z\":0,\"2020-01-29T00:00:00Z\":0,\"2020-01-30T00:00:00Z\":0,\"2020-01-31T00:00:00Z\":0,\"2020-02-01T00:00:00Z\":0,\"2020-02-02T00:00:00Z\":0,\"2020-02-03T00:00:00Z\":0,\"2020-02-04T00:00:00Z\":0,\"2020-02-05T00:00:00Z\":0,\"2020-02-06T00:00:00Z\":0,\"2020-02-07T00:00:00Z\":0,\"2020-02-08T00:00:00Z\":0,\"2020-02-09T00:00:00Z\":0,\"2020-02-10T00:00:00Z\":0,\"2020-02-11T00:00:00Z\":0,\"2020-02-12T00:00:00Z\":0,\"2020-02-13T00:00:00Z\":0,\"2020-02-14T00:00:00Z\":0,\"2020-02-15T00:00:00Z\":0,\"2020-02-16T00:00:00Z\":0,\"2020-02-17T00:00:00Z\":0,\"2020-02-18T00:00:00Z\":0,\"2020-02-19T00:00:00Z\":0,\"2020-02-20T00:00:00Z\":0,\"2020-02-21T00:00:00Z\":0,\"2020-02-22T00:00:00Z\":0,\"2020-02-23T00:00:00Z\":0,\"2020-02-24T00:00:00Z\":0,\"2020-02-25T00:00:00Z\":0,\"2020-02-26T00:00:00Z\":0,\"2020-02-27T00:00:00Z\":0,\"2020-02-28T00:00:00Z\":0,\"2020-02-29T00:00:00Z\":0,\"2020-03-01T00:00:00Z\":0,\"2020-03-02T00:00:00Z\":0,\"2020-03-03T00:00:00Z\":0,\"2020-03-04T00:00:00Z\":0,\"2020-03-05T00:00:00Z\":0,\"2020-03-06T00:00:00Z\":0,\"2020-03-07T00:00:00Z\":0,\"2020-03-08T00:00:00Z\":0,\"2020-03-09T00:00:00Z\":0,\"2020-03-10T00:00:00Z\":0,\"2020-03-11T00:00:00Z\":0,\"2020-03-12T00:00:00Z\":0,\"2020-03-13T00:00:00Z\":0,\"2020-03-14T00:00:00Z\":0,\"2020-03-15T00:00:00Z\":0,\"2020-03-16T00:00:00Z\":0,\"2020-03-17T00:00:00Z\":0,\"2020-03-18T00:00:00Z\":0,\"2020-03-19T00:00:00Z\":1,\"2020-03-20T00:00:00Z\":1,\"2020-03-21T00:00:00Z\":1,\"2020-03-22T00:00:00Z\":1,\"2020-03-23T00:00:00Z\":1,\"2020-03-24T00:00:00Z\":1,\"2020-03-25T00:00:00Z\":3,\"2020-03-26T00:00:00Z\":3,\"2020-03-27T00:00:00Z\":4,\"2020-03-28T00:00:00Z\":4,\"2020-03-29T00:00:00Z\":8,\"2020-03-30T00:00:00Z\":9,\"2020-03-31T00:00:00Z\":17,\"2020-04-01T00:00:00Z\":24,\"2020-04-02T00:00:00Z\":30,\"2020-04-03T00:00:00Z\":34}},\"recovered\":{\"latest\":0,\"timeline\":{}}}}}";


        return loc;
    }
}
